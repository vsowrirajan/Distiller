distiller {
    rawSystemCpu-1s {
        metric.name = "RawSystemCpu-1s"
        metric.description = "Produces raw SystemCpuRecord objects based on samples of CPU counters taken from /proc/stat every 1 second"
        proc.record.producer.metric.name = SystemCpu
        periodicity.ms = 1000
        output.queue.name = "RawSystemCpu-1s"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
    }
    rawSystemMemory-1s {
        metric.name = "RawSystemMemory-1s"
        metric.description = "Produces raw SystemMemoryRecord objects based on samples of memory counters taken from /proc/meminfo and /proc/vmstat every 1 second"
        proc.record.producer.metric.name = SystemMemory
        periodicity.ms = 1000
        output.queue.name = "RawSystemMemory-1s"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
    }
    rawDiskstat-1s {
        metric.name = "RawDiskstat-1s"
        metric.description = "Produces raw DiskstatRecord objects based on samples of disk counters taken from /proc/diskstats every 1 second"
        proc.record.producer.metric.name = Diskstat
        periodicity.ms = 1000
        output.queue.name = "RawDiskstat-1s"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
    }
    rawNetworkInterface-1s {
        metric.name = "RawNetworkInterface-1s"
        metric.description = "Produces raw NetworkInterfaceRecord objects based on samples of NIC counters taken from /sys/class/net/[ifname] every 1 second"
        proc.record.producer.metric.name = NetworkInterface
        periodicity.ms = 1000
        output.queue.name = "RawNetworkInterface-1s"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
    }
    rawProcessResource-60s {
        metric.name = "RawProcessResource-60s"
        metric.description = "Produces raw ProcessResourceRecord objects based on samples of per-process counters taken from /proc/[pid]/stat and /proc/[pid]/io every 60 seconds"
        proc.record.producer.metric.name = ProcessResource
        periodicity.ms = 60000
        output.queue.name = "RawProcessResource-60s"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 300
    }
    rawSlimProcessResource-1s {
        metric.name = "RawSlimProcessResource-1s"
        metric.description = "Produces raw SlimProcessResourceRecord objects based on samples of per-process counters taken from /proc/[pid]/stat and /proc/[pid]/io every 1 second"
        proc.record.producer.metric.name = SlimProcessResource
        periodicity.ms = 1000
        output.queue.name = "RawSlimProcessResource-1s"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 10
    }
    rawThreadResource-60s {
        metric.name = "RawThreadResource-60s"
        metric.description = "Produces raw ThreadResourceRecord objects based on samples of per-thread counters taken from /proc/[pid]/task/[tid]/stat and /proc/[pid]/task/[tid]/io every 60 seconds"
        proc.record.producer.metric.name = ThreadResource
        periodicity.ms = 60000
        output.queue.name = "RawThreadResource-60s"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 300
    }
    rawSlimThreadResource-1s {
        metric.name = "RawSlimThreadResource-1s"
        metric.description = "Produces raw SlimThreadResourceRecord objects based on samples of per-thread counters taken from /proc/[pid]/task/[tid]/stat and /proc/[pid]/task/[tid]/io every 1 second"
        proc.record.producer.metric.name = SlimThreadResource
        periodicity.ms = 1000
        output.queue.name = "RawSlimThreadResource-1s"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 10
    }
    rawTcpConnectionStat-10s {
        metric.name = "RawTcpConnectionStat-10s"
        metric.description = "Produces raw TcpConnectionStatRecord objects based on established TCP connections taken from /proc/net/tcp and /proc/[pid]/fd every 10 seconds"
        proc.record.producer.metric.name = TcpConnectionStat
        periodicity.ms = 10000
        output.queue.name = "RawTcpConnectionStat-10s"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
    }
    rawMfsGuts-1s {
	metric.name = "RawMfsGuts-1s"
	metric.description = "Samples of /opt/mapr/bin/guts output for MFS every 1 second"
        output.queue.name = "RawMfsGuts-1s"
	output.queue.capacity.records = 600
	output.queue.capacity.seconds = 600
	raw.producer.metrics.enabled = false
    }
    diffSystemMemory-1s {
	metric.name = "DiffSystemMemory-1s"
	metric.description = "Produces differential SystemMemoryRecord objects from raw SystemMemoryRecord objects at 1 second interval"
	input.queue.name = "RawSystemMemory-1s"
	output.queue.name = "DiffSystemMemory-1s"
	output.queue.capacity.records = 600
	output.queue.capacity.seconds = 600
	output.queue.max.producers = 1
	input.record.selector = sequential
	input.record.processor.name = SystemMemoryRecordProcessor
	input.record.processor.method = movingAverage 
	periodicity.ms = 1000
	metric.action.status.records.enabled = true
	metric.action.status.record.frequency = 5000
    }
    cummSystemMemory-1s {
	metric.name = "CummSystemMemory-1s"
	metric.description = "Produces cummulative SystemMemoryRecord objects from differential SystemMemoryRecordObjects at 1 second interval"
	input.queue.name = "DiffSystemMemory-1s"
	output.queue.name = "CummSystemMemory-1s"
        output.queue.capacity.records = 600
	output.queue.capacity.seconds = 600
	output.queue.max.producers = 1
	input.record.selector = cummulative
	input.record.processor.name = SystemMemoryRecordProcessor
	input.record.processor.method = movingAverage
	periodicity.ms = 1000
	metric.action.status.records.enabled = true
	metric.action.status.record.frequency = 5000
    }
    highSystemMemory-1s {
	metric.name = "HighSystemMemory-1s-90%"
	metric.description = "Produces differential SystemMemoryRecord objects where RAM utilization is > 90% at 1 second interval"
	input.queue.name = "DiffSystemMemory-1s"
	output.queue.name = "HighSystemMemory-1s-90%"
	output.queue.capacity.records = 600
	output.queue.capacity.seconds = 600
	output.queue.max.producers = 1
	input.record.selector = sequential
	input.record.processor.name = SystemMemoryRecordProcessor
	input.record.processor.method = isBelow
	threshold.key = "%free"
	threshold.value = 0.1
	periodicity.ms = 1000
	metric.action.status.records.enabled = true
	metric.action.status.record.frequency = 5000
    }
    mfsGutsRecordProducerStats-60s {
	metric.name = "MfsGutsRecordProducerStats"
	metric.description = "Internal performance information"
	raw.record.producer.name = "MfsGutsRecordProducer"
	periodicity = 60000
    }
    procRecordProducerStats-10s {
        metric.name = "ProcRecordProducerStats"
	metric.description = "Internal performance information"
	raw.record.producer.name = "ProcRecordProducer"
	periodicity = 10000
    }
}
