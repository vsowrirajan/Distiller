distiller {
    #
    # A simple configuration that enables raw Record prodcuers and persists their metrics to local file system.
    #
    RawSystemCpu-1sI {
        metric.name = "RawSystemCpu-1sI"
        metric.description = "Produces raw SystemCpuRecord objects based on samples of CPU counters taken from /proc/stat every 1 second"
        proc.record.producer.metric.name = SystemCpu
        periodicity.ms = 1000
        record.type = ProcRecordProducer
		output.queue.name = "RawSystemCpu-1sI"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
		metric.enabled=true
    }
    	RawSystemMemory-1sI {
        metric.name = "RawSystemMemory-1sI"
        metric.description = "Produces raw SystemMemoryRecord objects based on samples of memory counters taken from /proc/meminfo and /proc/vmstat every 1 second"
        proc.record.producer.metric.name = SystemMemory
        periodicity.ms = 1000
        record.type = ProcRecordProducer
		output.queue.name = "RawSystemMemory-1sI"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
		metric.enabled=true
    }
    RawDiskstat-1sI {
        metric.name = "RawDiskstat-1sI"
        metric.description = "Produces raw DiskstatRecord objects based on samples of disk counters taken from /proc/diskstats every 1 second"
        proc.record.producer.metric.name = Diskstat
        periodicity.ms = 1000
        record.type = ProcRecordProducer
		output.queue.name = "RawDiskstat-1sI"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
		metric.enabled=true
    }
    RawNetworkInterface-1sI {
        metric.name = "RawNetworkInterface-1sI"
        metric.description = "Produces raw NetworkInterfaceRecord objects based on samples of NIC counters taken from /sys/class/net/[ifname] every 1 second"
        proc.record.producer.metric.name = NetworkInterface
        periodicity.ms = 1000
        record.type = ProcRecordProducer
		output.queue.name = "RawNetworkInterface-1sI"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
		metric.enabled=true
    }
    RawProcessResource-5sI {
        metric.name = "RawProcessResource-5sI"
        metric.description = "Produces raw ProcessResourceRecord objects based on samples of per-process counters taken from /proc/[pid]/stat and /proc/[pid]/io every 5 seconds"
        proc.record.producer.metric.name = ProcessResource
        periodicity.ms = 5000
        record.type = ProcRecordProducer
		output.queue.name = "RawProcessResource-5sI"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 10
 		metric.enabled=true
   }
    RawThreadResource-5sI {
        metric.name = "RawThreadResource-5sI"
        metric.description = "Produces raw ThreadResourceRecord objects based on samples of per-thread counters taken from /proc/[pid]/task/[tid]/stat and /proc/[pid]/task/[tid]/io every 5 seconds"
        proc.record.producer.metric.name = ThreadResource
        periodicity.ms = 5000
        record.type = ProcRecordProducer
		output.queue.name = "RawThreadResource-5sI"
        output.queue.capacity.records = 65536
        output.queue.capacity.seconds = 10
		metric.enabled=true
    }

    RawTcpConnectionStat-30sI {
        metric.name = "RawTcpConnectionStat-30sI"
        metric.description = "Produces raw TcpConnectionStatRecord objects based on established TCP connections taken from /proc/net/tcp and /proc/[pid]/fd every 30 seconds"
        proc.record.producer.metric.name = TcpConnectionStat
        periodicity.ms = 30000
        record.type = ProcRecordProducer
		output.queue.name = "RawTcpConnectionStat-30sI"
        output.queue.capacity.records = 600
        output.queue.capacity.seconds = 600
 		metric.enabled=true
    }
    RawMfsGuts-1sI {
		metric.name = "RawMfsGuts-1sI"
		metric.description = "Samples of /opt/mapr/bin/guts output for MFS every 1 second"
        record.type = MfsGutsRecordProducer
		output.queue.name = "RawMfsGuts-1sI"
		output.queue.capacity.records = 600
		output.queue.capacity.seconds = 600
		raw.producer.metrics.enabled = false
		metric.enabled=true
    }
    RawLoadAverage-1sI {
		metric.name = "RawLoadAverage-1sI"
		metric.description = "Samples of /proc/loadavg output every 1 second"
        proc.record.producer.metric.name = LoadAverage
        periodicity.ms = 1000
        record.type = ProcRecordProducer
		output.queue.name = "RawLoadAverage-1sI"
		output.queue.capacity.records = 600
		output.queue.capacity.seconds = 600
		raw.producer.metrics.enabled = false
		metric.enabled=true
    }

    #
    # Persist records to local files
    #
    PersistRawDiskstat-1sI {
		metric.name = "PersistRawDiskstat-1sI"
		metric.description = "Persist records from the RawDiskstat-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "Diskstat"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawDiskstat-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 43200
    }
    PersistRawMfsGuts-1sI {
		metric.name = "PersistRawMfsGuts-1sI"
		metric.description = "Persist records from the RawMfsGuts-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "MfsGuts"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawMfsGuts-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 3600
    }
    PersistRawNetworkInterface-1sI {
		metric.name = "PersistRawNetworkInterface-1sI"
		metric.description = "Persist records from the RawNetworkInterface-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "NetworkInterface"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawNetworkInterface-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 14400
    }
    PersistRawProcessResource-5sI {
		metric.name = "PersistRawProcessResource-5sI"
		metric.description = "Persist records from the RawProcessResource-5sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "ProcessResource"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawProcessResource-5sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 1024
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 1048576
    }
    PersistRawSystemCpu-1sI {
		metric.name = "PersistRawSystemCpu-1sI"
		metric.description = "Persist records from the RawSystemCpu-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "SystemCpu"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawSystemCpu-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 3600
    }
    PersistRawSystemMemory-1sI {
		metric.name = "PersistRawSystemMemory-1sI"
		metric.description = "Persist records from the RawSystemMemory-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "SystemMemory"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawSystemMemory-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 3600
    }
    PersistRawTcpConnectionStat-30sI {
		metric.name = "PersistRawTcpConnectionStat-30sI"
		metric.description = "Persist records from the RawTcpConnectionStat-30sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "TcpConnectionStat"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawTcpConnectionStat-30sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 32768
    }
    PersistRawThreadResource-5sI {
		metric.name = "PersistRawThreadResource-5sI"
		metric.description = "Persist records from the RawThreadResource-5sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "ThreadResource"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawThreadResource-5sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 1024
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 2097152
    }
    PersistRawLoadAverage-1sI {
		metric.name = "PersistRawLoadAverage-1sI"
		metric.description = "Persist records from the RawLoadAverage-1sI queue to a local file  at /opt/mapr/distiller/output/"
		record.type = "LoadAverage"
		metric.enabled = true
		periodicity.ms = 1000
		input.queue.name = "RawLoadAverage-1sI"
		input.record.selector = persist
		persistor.name = "LocalFileSystem"
		lfsp.output.dir = "/opt/mapr/distiller/output"
		lfsp.max.output.dir.size = 1073741824
		lfsp.write.batch.size = 128
		lfsp.flush.frequency = 30000
		lfsp.records.per.file = 3600
    }
}
